{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KASIM\\\\Documents\\\\bookist-alpha\\\\client\\\\src\\\\components\\\\navigation\\\\menu\\\\NavigationMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"../../../app/hocs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearBookState } from \"../../../services/volumeInfoSlice\";\nimport { clearBooklists } from \"../../../services/librarySlice\";\nimport { toggleIsLoggedIn } from \"../../../services/librarySlice\";\nimport axios from \"axios\";\nimport classes from \"./NavigationMenu.module.css\";\nimport home from \"../../../assets/home.png\";\nimport library from \"../../../assets/library.png\";\nimport settings from \"../../../assets/settings.png\";\nimport logout from \"../../../assets/logout.png\";\nimport login from \"../../../assets/login.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavigationMenu = props => {\n  _s();\n\n  const isLoggedIn = useSelector(state => state.library.isLoggedIn);\n  const dispatch = useDispatch();\n  const location = props.location.pathname;\n\n  const onLogoutClick = () => {\n    sessionStorage.removeItem(\"persist:root\");\n    axios.delete(\"/api/auth/logout\");\n    dispatch(toggleIsLoggedIn());\n    dispatch(clearBookState());\n    dispatch(clearBooklists([]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.navigationMenu,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: classes.linksLink,\n      to: \"/\",\n      style: {\n        color: location === \"/\" && \"rgb(255, 140, 140)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.menuIcon,\n        src: home,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), \"Home\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Link, {\n      className: classes.linksLink,\n      to: \"/library\",\n      style: {\n        color: location === \"/library\" && \"rgb(255, 140, 140)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.menuIcon,\n        src: library,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this), \"Library\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Link, {\n      className: classes.linksLink,\n      to: \"/settings\",\n      style: {\n        color: location === \"/settings\" && \"rgb(255, 140, 140)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.menuIcon,\n        src: settings,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this), \"Settings\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Link, {\n      className: classes.linksLinkLast,\n      to: \"/\",\n      onClick: () => onLogoutClick(),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.menuIcon,\n        src: logout,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this), \"Logout\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(Link, {\n      className: classes.linksLinkLast,\n      to: \"/login\",\n      style: {\n        color: location === \"/login\" ? \"rgb(255, 140, 140)\" : \"hsla(101, 55%, 42%, 1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.menuIcon,\n        src: login,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 16\n      }, this), \"Login/Register\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n\n_s(NavigationMenu, \"XmtqMR/uc0b6gdzy1STwGveQnZE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = NavigationMenu;\nexport default _c2 = withRouter(NavigationMenu);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavigationMenu\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/KASIM/Documents/bookist-alpha/client/src/components/navigation/menu/NavigationMenu.jsx"],"names":["Link","withRouter","useDispatch","useSelector","clearBookState","clearBooklists","toggleIsLoggedIn","axios","classes","home","library","settings","logout","login","NavigationMenu","props","isLoggedIn","state","dispatch","location","pathname","onLogoutClick","sessionStorage","removeItem","delete","navigationMenu","linksLink","color","menuIcon","linksLinkLast"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"../../../app/hocs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearBookState } from \"../../../services/volumeInfoSlice\";\r\nimport { clearBooklists } from \"../../../services/librarySlice\";\r\nimport { toggleIsLoggedIn } from \"../../../services/librarySlice\";\r\nimport axios from \"axios\";\r\nimport classes from \"./NavigationMenu.module.css\";\r\nimport home from \"../../../assets/home.png\";\r\nimport library from \"../../../assets/library.png\";\r\nimport settings from \"../../../assets/settings.png\";\r\nimport logout from \"../../../assets/logout.png\";\r\nimport login from \"../../../assets/login.png\";\r\n\r\nconst NavigationMenu = (props) => {\r\n   const isLoggedIn = useSelector((state) => state.library.isLoggedIn);\r\n   const dispatch = useDispatch();\r\n   const location = props.location.pathname;\r\n\r\n   const onLogoutClick = () => {\r\n      sessionStorage.removeItem(\"persist:root\");\r\n      axios.delete(\"/api/auth/logout\");\r\n      dispatch(toggleIsLoggedIn());\r\n      dispatch(clearBookState());\r\n      dispatch(clearBooklists([]));\r\n   };\r\n\r\n   return (\r\n      <div className={classes.navigationMenu}>\r\n         <Link\r\n            className={classes.linksLink}\r\n            to=\"/\"\r\n            style={{ color: location === \"/\" && \"rgb(255, 140, 140)\" }}\r\n         >\r\n            <img className={classes.menuIcon} src={home} alt=\"\" />\r\n            Home\r\n         </Link>\r\n         {isLoggedIn && (\r\n            <Link\r\n               className={classes.linksLink}\r\n               to=\"/library\"\r\n               style={{\r\n                  color: location === \"/library\" && \"rgb(255, 140, 140)\",\r\n               }}\r\n            >\r\n               <img className={classes.menuIcon} src={library} alt=\"\" />\r\n               Library\r\n            </Link>\r\n         )}\r\n         {isLoggedIn && (\r\n            <Link\r\n               className={classes.linksLink}\r\n               to=\"/settings\"\r\n               style={{\r\n                  color: location === \"/settings\" && \"rgb(255, 140, 140)\",\r\n               }}\r\n            >\r\n               <img className={classes.menuIcon} src={settings} alt=\"\" />\r\n               Settings\r\n            </Link>\r\n         )}\r\n         {isLoggedIn && (\r\n            <Link\r\n               className={classes.linksLinkLast}\r\n               to=\"/\"\r\n               onClick={() => onLogoutClick()}\r\n            >\r\n               <img className={classes.menuIcon} src={logout} alt=\"\" />\r\n               Logout\r\n            </Link>\r\n         )}\r\n         {!isLoggedIn && (\r\n            <Link\r\n               className={classes.linksLinkLast}\r\n               to=\"/login\"\r\n               style={{\r\n                  color:\r\n                     location === \"/login\"\r\n                        ? \"rgb(255, 140, 140)\"\r\n                        : \"hsla(101, 55%, 42%, 1)\",\r\n               }}\r\n            >\r\n               <img className={classes.menuIcon} src={login} alt=\"\" />\r\n               Login/Register\r\n            </Link>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default withRouter(NavigationMenu);\r\n"]},"metadata":{},"sourceType":"module"}