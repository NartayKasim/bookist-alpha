{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";import librarySlice from\"../services/librarySlice.js\";import volumeInfoSlice from\"../services/volumeInfoSlice.js\";import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from\"redux-persist\";import{combineReducers}from\"redux\";import storageSession from\"redux-persist/lib/storage/session\";var persistConfig={key:\"root\",version:1,storage:storageSession};var rootReducer=combineReducers({volume_info:volumeInfoSlice,library:librarySlice});var persistedReducer=persistReducer(persistConfig,rootReducer);var store=configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}});}});export var persistor=persistStore(store);export default store;","map":{"version":3,"sources":["C:/Users/KASIM/Documents/bookist-alpha/client/src/app/store.js"],"names":["configureStore","librarySlice","volumeInfoSlice","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","combineReducers","storageSession","persistConfig","key","version","storage","rootReducer","volume_info","library","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,CAEA,OACGC,YADH,CAEGC,cAFH,CAGGC,KAHH,CAIGC,SAJH,CAKGC,KALH,CAMGC,OANH,CAOGC,KAPH,CAQGC,QARH,KASO,eATP,CAUA,OAASC,eAAT,KAAgC,OAAhC,CACA,MAAOC,CAAAA,cAAP,KAA2B,mCAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACnBC,GAAG,CAAE,MADc,CAEnBC,OAAO,CAAE,CAFU,CAGnBC,OAAO,CAAEJ,cAHU,CAAtB,CAMA,GAAMK,CAAAA,WAAW,CAAGN,eAAe,CAAC,CACjCO,WAAW,CAAEhB,eADoB,CAEjCiB,OAAO,CAAElB,YAFwB,CAAD,CAAnC,CAKA,GAAMmB,CAAAA,gBAAgB,CAAGhB,cAAc,CAACS,aAAD,CAAgBI,WAAhB,CAAvC,CAEA,GAAMI,CAAAA,KAAK,CAAGrB,cAAc,CAAC,CAC1BsB,OAAO,CAAEF,gBADiB,CAE1BG,UAAU,CAAE,oBAACC,oBAAD,QACTA,CAAAA,oBAAoB,CAAC,CAClBC,iBAAiB,CAAE,CAChBC,cAAc,CAAE,CAACrB,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADA,CADD,CAAD,CADX,EAFc,CAAD,CAA5B,CAUA,MAAO,IAAIiB,CAAAA,SAAS,CAAGxB,YAAY,CAACkB,KAAD,CAA5B,CACP,cAAeA,CAAAA,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport librarySlice from \"../services/librarySlice.js\";\r\nimport volumeInfoSlice from \"../services/volumeInfoSlice.js\";\r\n\r\nimport {\r\n   persistStore,\r\n   persistReducer,\r\n   FLUSH,\r\n   REHYDRATE,\r\n   PAUSE,\r\n   PERSIST,\r\n   PURGE,\r\n   REGISTER,\r\n} from \"redux-persist\";\r\nimport { combineReducers } from \"redux\";\r\nimport storageSession from \"redux-persist/lib/storage/session\";\r\n\r\nconst persistConfig = {\r\n   key: \"root\",\r\n   version: 1,\r\n   storage: storageSession,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n   volume_info: volumeInfoSlice,\r\n   library: librarySlice,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n   reducer: persistedReducer,\r\n   middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n         serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n         },\r\n      }),\r\n});\r\n\r\nexport let persistor = persistStore(store);\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}