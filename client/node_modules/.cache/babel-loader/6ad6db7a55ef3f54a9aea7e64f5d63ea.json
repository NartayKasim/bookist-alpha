{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  book: {}\n};\nexport const submitRating = createAsyncThunk(\"book/submitRating\", async ratingObj => {\n  const {\n    book,\n    rating\n  } = ratingObj;\n  const response = await axios.put(\"/api/book/rate\", {\n    book,\n    rating\n  });\n  return response.data;\n});\nexport const getAcquiredStats = createAsyncThunk(\"book/getAcquiredStats\", async bookObj => {\n  const {\n    title,\n    author\n  } = bookObj;\n  const response = await axios.get(\"/api/book/get-bookcard\", {\n    title,\n    author\n  });\n  return response.data;\n});\nconst volumeInfoSlice = createSlice({\n  name: \"volumeInfoSlice\",\n  initialState,\n  reducers: {\n    loadAcquiredStats(state, action) {\n      state.acquired_stats = action.payload;\n      return state;\n    },\n\n    loadBook(state, action) {\n      state = action.payload;\n      return state;\n    },\n\n    clearBookState(state, action) {\n      return initialState;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(submitRating.fulfilled, (state, action) => {\n      state.book.users_rating = action.payload.rating;\n      return state;\n    }).addCase(getAcquiredStats.fulfilled, (state, action) => {\n      state = action.payload;\n    });\n  }\n});\nexport const {\n  loadBook,\n  clearBookState\n} = volumeInfoSlice.actions;\nexport default volumeInfoSlice.reducer;","map":{"version":3,"sources":["C:/Users/KASIM/Documents/bookist-alpha/client/src/services/volumeInfoSlice.js"],"names":["createSlice","createAsyncThunk","axios","initialState","book","submitRating","ratingObj","rating","response","put","data","getAcquiredStats","bookObj","title","author","get","volumeInfoSlice","name","reducers","loadAcquiredStats","state","action","acquired_stats","payload","loadBook","clearBookState","extraReducers","builder","addCase","fulfilled","users_rating","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,IAAI,EAAE;AADY,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAGJ,gBAAgB,CACzC,mBADyC,EAEzC,MAAOK,SAAP,IAAqB;AAClB,QAAM;AAAEF,IAAAA,IAAF;AAAQG,IAAAA;AAAR,MAAmBD,SAAzB;AACA,QAAME,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,gBAAV,EAA4B;AAChDL,IAAAA,IADgD;AAEhDG,IAAAA;AAFgD,GAA5B,CAAvB;AAIA,SAAOC,QAAQ,CAACE,IAAhB;AACF,CATwC,CAArC;AAYP,OAAO,MAAMC,gBAAgB,GAAGV,gBAAgB,CAC7C,uBAD6C,EAE7C,MAAOW,OAAP,IAAmB;AAChB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,OAA1B;AACA,QAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACa,GAAN,CAAU,wBAAV,EAAoC;AACxDF,IAAAA,KADwD;AAExDC,IAAAA;AAFwD,GAApC,CAAvB;AAIA,SAAON,QAAQ,CAACE,IAAhB;AACF,CAT4C,CAAzC;AAYP,MAAMM,eAAe,GAAGhB,WAAW,CAAC;AACjCiB,EAAAA,IAAI,EAAE,iBAD2B;AAEjCd,EAAAA,YAFiC;AAGjCe,EAAAA,QAAQ,EAAE;AACPC,IAAAA,iBAAiB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACE,cAAN,GAAuBD,MAAM,CAACE,OAA9B;AACA,aAAOH,KAAP;AACF,KAJM;;AAMPI,IAAAA,QAAQ,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,GAAGC,MAAM,CAACE,OAAf;AACA,aAAOH,KAAP;AACF,KATM;;AAWPK,IAAAA,cAAc,CAACL,KAAD,EAAQC,MAAR,EAAgB;AAC3B,aAAOlB,YAAP;AACF;;AAbM,GAHuB;AAkBjCuB,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACzBA,IAAAA,OAAO,CACHC,OADJ,CACYvB,YAAY,CAACwB,SADzB,EACoC,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACjDD,MAAAA,KAAK,CAAChB,IAAN,CAAW0B,YAAX,GAA0BT,MAAM,CAACE,OAAP,CAAehB,MAAzC;AACA,aAAOa,KAAP;AACF,KAJJ,EAKIQ,OALJ,CAKYjB,gBAAgB,CAACkB,SAL7B,EAKwC,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACrDD,MAAAA,KAAK,GAAGC,MAAM,CAACE,OAAf;AACF,KAPJ;AAQF;AA3BgC,CAAD,CAAnC;AA8BA,OAAO,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA+BT,eAAe,CAACe,OAArD;AACP,eAAef,eAAe,CAACgB,OAA/B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n   book: {},\r\n};\r\n\r\nexport const submitRating = createAsyncThunk(\r\n   \"book/submitRating\",\r\n   async (ratingObj) => {\r\n      const { book, rating } = ratingObj;\r\n      const response = await axios.put(\"/api/book/rate\", {\r\n         book,\r\n         rating,\r\n      });\r\n      return response.data;\r\n   }\r\n);\r\n\r\nexport const getAcquiredStats = createAsyncThunk(\r\n   \"book/getAcquiredStats\",\r\n   async (bookObj) => {\r\n      const { title, author } = bookObj;\r\n      const response = await axios.get(\"/api/book/get-bookcard\", {\r\n         title,\r\n         author,\r\n      });\r\n      return response.data;\r\n   }\r\n);\r\n\r\nconst volumeInfoSlice = createSlice({\r\n   name: \"volumeInfoSlice\",\r\n   initialState,\r\n   reducers: {\r\n      loadAcquiredStats(state, action) {\r\n         state.acquired_stats = action.payload;\r\n         return state;\r\n      },\r\n\r\n      loadBook(state, action) {\r\n         state = action.payload;\r\n         return state;\r\n      },\r\n\r\n      clearBookState(state, action) {\r\n         return initialState;\r\n      },\r\n   },\r\n   extraReducers: (builder) => {\r\n      builder\r\n         .addCase(submitRating.fulfilled, (state, action) => {\r\n            state.book.users_rating = action.payload.rating;\r\n            return state;\r\n         })\r\n         .addCase(getAcquiredStats.fulfilled, (state, action) => {\r\n            state = action.payload;\r\n         });\r\n   },\r\n});\r\n\r\nexport const { loadBook, clearBookState } = volumeInfoSlice.actions;\r\nexport default volumeInfoSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}