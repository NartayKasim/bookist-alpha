{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nexport const useFormatWithUserBooks = book => {\n  _s();\n\n  const userBooks = useSelector(state => state.library.userBooks);\n\n  if (userBooks && userBooks.length > 0) {\n    for (let i = 0; i < userBooks.length; i++) {\n      if (book.title === userBooks[i].title && book.author === userBooks[i].author) {\n        book.booklists = userBooks[i].booklists;\n        book.user_rating = userBooks[i].user_rating;\n        book.user_review = userBooks[i].user_review || null;\n        book.reviews = userBooks[i].reviews || [];\n        return book;\n      }\n    }\n  }\n\n  return book;\n};\n\n_s(useFormatWithUserBooks, \"/xK2nT8DiLnQIozY5RQOSP++POg=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFormatWithBooklists = booksArray => {\n  const booklistNames = [];\n  booksArray.forEach(book => {\n    if (book.booklists) {\n      book.booklists.forEach(name => {\n        if (!booklistNames.includes(name) && name !== \"reviewed\") {\n          booklistNames.push(name);\n        }\n      });\n    }\n  });\n  const booklistObjArray = booklistNames.map(booklistName => {\n    return {\n      booklist_name: booklistName,\n      books: booksArray.filter(book => book.booklists.includes(booklistName))\n    };\n  });\n  return booklistObjArray;\n};","map":{"version":3,"sources":["C:/Users/KASIM/Documents/bookist-alpha/client/src/app/hooks.js"],"names":["useSelector","useFormatWithUserBooks","book","userBooks","state","library","length","i","title","author","booklists","user_rating","user_review","reviews","useFormatWithBooklists","booksArray","booklistNames","forEach","name","includes","push","booklistObjArray","map","booklistName","booklist_name","books","filter"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,sBAAsB,GAAIC,IAAD,IAAU;AAAA;;AAC7C,QAAMC,SAAS,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,SAA1B,CAA7B;;AACA,MAAIA,SAAS,IAAIA,SAAS,CAACG,MAAV,GAAmB,CAApC,EAAuC;AACpC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACG,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACxC,UACGL,IAAI,CAACM,KAAL,KAAeL,SAAS,CAACI,CAAD,CAAT,CAAaC,KAA5B,IACAN,IAAI,CAACO,MAAL,KAAgBN,SAAS,CAACI,CAAD,CAAT,CAAaE,MAFhC,EAGE;AACCP,QAAAA,IAAI,CAACQ,SAAL,GAAiBP,SAAS,CAACI,CAAD,CAAT,CAAaG,SAA9B;AACAR,QAAAA,IAAI,CAACS,WAAL,GAAmBR,SAAS,CAACI,CAAD,CAAT,CAAaI,WAAhC;AACAT,QAAAA,IAAI,CAACU,WAAL,GAAmBT,SAAS,CAACI,CAAD,CAAT,CAAaK,WAAb,IAA4B,IAA/C;AACAV,QAAAA,IAAI,CAACW,OAAL,GAAeV,SAAS,CAACI,CAAD,CAAT,CAAaM,OAAb,IAAwB,EAAvC;AACA,eAAOX,IAAP;AACF;AACH;AACH;;AACD,SAAOA,IAAP;AACF,CAjBM;;GAAMD,sB;UACQD,W;;;AAkBrB,OAAO,MAAMc,sBAAsB,GAAIC,UAAD,IAAgB;AACnD,QAAMC,aAAa,GAAG,EAAtB;AACAD,EAAAA,UAAU,CAACE,OAAX,CAAoBf,IAAD,IAAU;AAC1B,QAAIA,IAAI,CAACQ,SAAT,EAAoB;AACjBR,MAAAA,IAAI,CAACQ,SAAL,CAAeO,OAAf,CAAwBC,IAAD,IAAU;AAC9B,YAAI,CAACF,aAAa,CAACG,QAAd,CAAuBD,IAAvB,CAAD,IAAiCA,IAAI,KAAK,UAA9C,EAA0D;AACvDF,UAAAA,aAAa,CAACI,IAAd,CAAmBF,IAAnB;AACF;AACH,OAJD;AAKF;AACH,GARD;AASA,QAAMG,gBAAgB,GAAGL,aAAa,CAACM,GAAd,CAAmBC,YAAD,IAAkB;AAC1D,WAAO;AACJC,MAAAA,aAAa,EAAED,YADX;AAEJE,MAAAA,KAAK,EAAEV,UAAU,CAACW,MAAX,CAAmBxB,IAAD,IACtBA,IAAI,CAACQ,SAAL,CAAeS,QAAf,CAAwBI,YAAxB,CADI;AAFH,KAAP;AAMF,GAPwB,CAAzB;AAQA,SAAOF,gBAAP;AACF,CApBM","sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nexport const useFormatWithUserBooks = (book) => {\r\n   const userBooks = useSelector((state) => state.library.userBooks);\r\n   if (userBooks && userBooks.length > 0) {\r\n      for (let i = 0; i < userBooks.length; i++) {\r\n         if (\r\n            book.title === userBooks[i].title &&\r\n            book.author === userBooks[i].author\r\n         ) {\r\n            book.booklists = userBooks[i].booklists;\r\n            book.user_rating = userBooks[i].user_rating;\r\n            book.user_review = userBooks[i].user_review || null;\r\n            book.reviews = userBooks[i].reviews || [];\r\n            return book;\r\n         }\r\n      }\r\n   }\r\n   return book;\r\n};\r\n\r\nexport const useFormatWithBooklists = (booksArray) => {\r\n   const booklistNames = [];\r\n   booksArray.forEach((book) => {\r\n      if (book.booklists) {\r\n         book.booklists.forEach((name) => {\r\n            if (!booklistNames.includes(name) && name !== \"reviewed\") {\r\n               booklistNames.push(name);\r\n            }\r\n         });\r\n      }\r\n   });\r\n   const booklistObjArray = booklistNames.map((booklistName) => {\r\n      return {\r\n         booklist_name: booklistName,\r\n         books: booksArray.filter((book) =>\r\n            book.booklists.includes(booklistName)\r\n         ),\r\n      };\r\n   });\r\n   return booklistObjArray;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}