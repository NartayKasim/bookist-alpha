{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KASIM\\\\Documents\\\\bookist-alpha\\\\client\\\\src\\\\pages\\\\login\\\\register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { getUserBooks, toggleIsLoggedIn } from \"../../../services/librarySlice\";\nimport classes from \"./Register.module.css\";\nimport accountIcon from \"../../../assets/account.png\";\nimport emailIcon from \"../../../assets/email.png\";\nimport passwordIcon from \"../../../assets/password.png\";\nimport Button from \"../../../components/common/button/Button\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [verifyPassword, setVerifyPassword] = useState(\"\");\n  const [errorState, setErrorState] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const onRegisterClick = async () => {\n    setErrorState(\"\");\n\n    if (password !== verifyPassword) {\n      return setErrorState(\"Password and verify password fields mismatch.\");\n    } else if (password.length === 0 || verifyPassword.length === 0 || displayName.length === 0 || email.length === 0) {\n      return setErrorState(\"Please enter a value for all required fields.\");\n    }\n\n    const user = {\n      displayName,\n      email,\n      password\n    };\n\n    try {\n      await axios.post(\"/api/auth/register\", {\n        user\n      });\n      dispatch(getUserBooks());\n      dispatch(toggleIsLoggedIn());\n      navigate(\"/library\");\n    } catch (e) {\n      var _e$response;\n\n      setErrorState((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.registerWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.registerBody,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.labels,\n        children: \"Display Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.inputIcon,\n          src: accountIcon,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setDisplayName(e.target.value),\n          className: classes.input,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.labels,\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.inputIcon,\n          src: emailIcon,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setEmail(e.target.value),\n          className: classes.input,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.labels,\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.inputIcon,\n          src: passwordIcon,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setPassword(e.target.value),\n          className: classes.input,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.labels,\n        children: \"Verify Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.inputIcon,\n          src: passwordIcon,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setVerifyPassword(e.target.value),\n          className: classes.input,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.errors,\n        children: errorState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.registerButtons,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClickFunc: onRegisterClick,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Register, \"KD8HI8xd0FYq7of6H/Xix0XpBoI=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/KASIM/Documents/bookist-alpha/client/src/pages/login/register/Register.jsx"],"names":["useState","useNavigate","useDispatch","getUserBooks","toggleIsLoggedIn","classes","accountIcon","emailIcon","passwordIcon","Button","axios","Register","email","setEmail","displayName","setDisplayName","password","setPassword","verifyPassword","setVerifyPassword","errorState","setErrorState","navigate","dispatch","onRegisterClick","length","user","post","e","response","data","registerWrapper","registerBody","labels","inputWrapper","inputIcon","target","value","input","errors","registerButtons"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUserBooks, toggleIsLoggedIn } from \"../../../services/librarySlice\";\r\nimport classes from \"./Register.module.css\";\r\nimport accountIcon from \"../../../assets/account.png\";\r\nimport emailIcon from \"../../../assets/email.png\";\r\nimport passwordIcon from \"../../../assets/password.png\";\r\nimport Button from \"../../../components/common/button/Button\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Register() {\r\n   const [email, setEmail] = useState(\"\");\r\n   const [displayName, setDisplayName] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [verifyPassword, setVerifyPassword] = useState(\"\");\r\n   const [errorState, setErrorState] = useState(\"\");\r\n\r\n   const navigate = useNavigate();\r\n   const dispatch = useDispatch();\r\n\r\n   const onRegisterClick = async () => {\r\n      setErrorState(\"\");\r\n      if (password !== verifyPassword) {\r\n         return setErrorState(\"Password and verify password fields mismatch.\");\r\n      } else if (\r\n         password.length === 0 ||\r\n         verifyPassword.length === 0 ||\r\n         displayName.length === 0 ||\r\n         email.length === 0\r\n      ) {\r\n         return setErrorState(\"Please enter a value for all required fields.\");\r\n      }\r\n\r\n      const user = {\r\n         displayName,\r\n         email,\r\n         password,\r\n      };\r\n\r\n      try {\r\n         await axios.post(\"/api/auth/register\", { user });\r\n         dispatch(getUserBooks());\r\n         dispatch(toggleIsLoggedIn());\r\n         navigate(\"/library\");\r\n      } catch (e) {\r\n         setErrorState(e.response?.data);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className={classes.registerWrapper}>\r\n         <div className={classes.registerBody}>\r\n            <div className={classes.labels}>Display Name</div>\r\n\r\n            <div className={classes.inputWrapper}>\r\n               <img className={classes.inputIcon} src={accountIcon} alt=\"\" />\r\n               <input\r\n                  onChange={(e) => setDisplayName(e.target.value)}\r\n                  className={classes.input}\r\n                  type=\"text\"\r\n               />\r\n            </div>\r\n            <div className={classes.labels}>Email</div>\r\n\r\n            <div className={classes.inputWrapper}>\r\n               <img className={classes.inputIcon} src={emailIcon} alt=\"\" />\r\n               <input\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className={classes.input}\r\n                  type=\"text\"\r\n               />\r\n            </div>\r\n            <div className={classes.labels}>Password</div>\r\n\r\n            <div className={classes.inputWrapper}>\r\n               <img className={classes.inputIcon} src={passwordIcon} alt=\"\" />\r\n               <input\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className={classes.input}\r\n                  type=\"text\"\r\n               />\r\n            </div>\r\n            <div className={classes.labels}>Verify Password</div>\r\n\r\n            <div className={classes.inputWrapper}>\r\n               <img className={classes.inputIcon} src={passwordIcon} alt=\"\" />\r\n               <input\r\n                  onChange={(e) => setVerifyPassword(e.target.value)}\r\n                  className={classes.input}\r\n                  type=\"text\"\r\n               />\r\n            </div>\r\n            <div className={classes.errors}>{errorState}</div>\r\n         </div>\r\n         <div className={classes.registerButtons}>\r\n            <Button onClickFunc={onRegisterClick}>Register</Button>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}