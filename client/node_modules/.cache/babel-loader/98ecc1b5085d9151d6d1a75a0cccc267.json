{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KASIM\\\\Documents\\\\bookist-alpha\\\\client\\\\src\\\\components\\\\book\\\\description\\\\Description.jsx\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Description.module.css\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst expandVariant = {\n  hidden: {\n    height: \"9.5rem\",\n    overflow: \"hidden\",\n    transition: {\n      duration: 0.5\n    }\n  },\n  shown: {\n    height: \"auto\",\n    transition: {\n      duration: 0.5\n    }\n  },\n  removed: {\n    height: \"9.5rem\",\n    overflow: \"hidden\"\n  }\n};\nconst reduceVariant = {\n  hidden: {\n    height: \"auto\",\n    transition: {\n      duration: 0.5\n    }\n  },\n  shown: {\n    height: \"9.5rem\",\n    overflow: \"hidden\",\n    transition: {\n      duration: 0.5\n    }\n  },\n  removed: {\n    height: \"9.5rem\",\n    overflow: \"hidden\"\n  }\n};\nexport default function Description(_ref) {\n  _s();\n\n  let {\n    description\n  } = _ref;\n  const [expandDescription, setExpandDescription] = useState(false);\n  const [showExpandButton, setShowExpandButton] = useState(false);\n  useEffect(() => {\n    if (description && description !== null && description.length > 230) {\n      setShowExpandButton(true);\n    }\n  }, [showExpandButton, description]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.descriptionWrapper,\n    children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n      initial: false,\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: expandDescription ? expandVariant : reduceVariant,\n        initial: \"hidden\",\n        animate: \"shown\",\n        exit: \"removed\",\n        className: classes.description,\n        children: description !== null && description.length > 0 && description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.expandDescriptionRow,\n      children: showExpandButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.expandDescriptionButton,\n        onClick: () => setExpandDescription(!expandDescription),\n        children: expandDescription ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Reduce Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Expand Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Description, \"ENuR/G1jDvlmWf+RibDNGmYWPXQ=\");\n\n_c = Description;\n\nvar _c;\n\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"sources":["C:/Users/KASIM/Documents/bookist-alpha/client/src/components/book/description/Description.jsx"],"names":["classes","AnimatePresence","motion","useEffect","useState","expandVariant","hidden","height","overflow","transition","duration","shown","removed","reduceVariant","Description","description","expandDescription","setExpandDescription","showExpandButton","setShowExpandButton","length","descriptionWrapper","expandDescriptionRow","expandDescriptionButton"],"mappings":"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","sourcesContent":["import classes from \"./Description.module.css\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst expandVariant = {\r\n   hidden: {\r\n      height: \"9.5rem\",\r\n      overflow: \"hidden\",\r\n      transition: { duration: 0.5 },\r\n   },\r\n   shown: { height: \"auto\", transition: { duration: 0.5 } },\r\n   removed: {\r\n      height: \"9.5rem\",\r\n      overflow: \"hidden\",\r\n   },\r\n};\r\n\r\nconst reduceVariant = {\r\n   hidden: {\r\n      height: \"auto\",\r\n      transition: { duration: 0.5 },\r\n   },\r\n   shown: {\r\n      height: \"9.5rem\",\r\n      overflow: \"hidden\",\r\n      transition: { duration: 0.5 },\r\n   },\r\n   removed: {\r\n      height: \"9.5rem\",\r\n      overflow: \"hidden\",\r\n   },\r\n};\r\n\r\nexport default function Description({ description }) {\r\n   const [expandDescription, setExpandDescription] = useState(false);\r\n   const [showExpandButton, setShowExpandButton] = useState(false);\r\n\r\n   useEffect(() => {\r\n      if (description && description !== null && description.length > 230) {\r\n         setShowExpandButton(true);\r\n      }\r\n   }, [showExpandButton, description]);\r\n\r\n   return (\r\n      <div className={classes.descriptionWrapper}>\r\n         <AnimatePresence initial={false}>\r\n            <motion.div\r\n               variants={expandDescription ? expandVariant : reduceVariant}\r\n               initial=\"hidden\"\r\n               animate=\"shown\"\r\n               exit=\"removed\"\r\n               className={classes.description}\r\n            >\r\n               {description !== null && description.length > 0 && description}\r\n            </motion.div>\r\n         </AnimatePresence>\r\n         <div className={classes.expandDescriptionRow}>\r\n            {showExpandButton && (\r\n               <button\r\n                  className={classes.expandDescriptionButton}\r\n                  onClick={() => setExpandDescription(!expandDescription)}\r\n               >\r\n                  {expandDescription ? (\r\n                     <span>Reduce Description</span>\r\n                  ) : (\r\n                     <span>Expand Description</span>\r\n                  )}\r\n               </button>\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}