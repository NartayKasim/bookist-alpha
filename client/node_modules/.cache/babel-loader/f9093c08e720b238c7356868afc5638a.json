{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KASIM\\\\Documents\\\\bookist-alpha\\\\client\\\\src\\\\components\\\\book\\\\reviews\\\\Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport classes from \"./Reviews.module.css\";\nimport Review from \"./Review\";\nimport ComposeReview from \"./ComposeReview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reviews(_ref) {\n  _s();\n\n  let {\n    book,\n    updateBook\n  } = _ref;\n  const isLoggedIn = useSelector(state => state.library.isLoggedIn);\n  const [reviews, setReviews] = useState(null);\n  const [targetReview, setTargetReview] = useState({});\n\n  const onReviewContentChange = val => {\n    if (!val) {\n      return setTargetReview({});\n    }\n\n    setTargetReview({ ...targetReview,\n      content: val\n    });\n  };\n\n  const onSubmitReviewClick = async () => {\n    if (targetReview.review_id && targetReview.content && targetReview.content.length > 0) {\n      axios.post(\"/api/library/review\", {\n        book,\n        review: targetReview\n      }).then(response => setReviews(response.data));\n    } else {\n      if (targetReview.content.length > 0) {\n        axios.post(\"/api/library/review\", {\n          book,\n          review: {\n            content: targetReview.content\n          }\n        }).then(response => {\n          if (response.data.length === 2) {\n            setReviews(response.data[0]);\n            updateBook(response.data[1]);\n          } else {\n            setReviews(response.data);\n          }\n        });\n      }\n    }\n\n    setTargetReview({});\n  };\n\n  const onDeleteReviewClick = review => {\n    axios.post(\"/api/library/review/delete\", {\n      book,\n      review_id: review.review_id\n    }).then(() => setReviews(null));\n  };\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const response = await axios.get(`/api/library/get-reviews/${book.book_id}`);\n      setReviews(response.data);\n    };\n\n    if (reviews === null && book.book_id) {\n      getReviews();\n    }\n  }, [book, reviews]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.reviews,\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(ComposeReview, {\n      content: targetReview.content || \"\",\n      onReviewContentChange: onReviewContentChange,\n      onSubmitReviewClick: onSubmitReviewClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), reviews !== null && reviews.length > 0 && reviews.map(review => /*#__PURE__*/_jsxDEV(Review, {\n      review: review,\n      setTargetReview: setTargetReview,\n      onDeleteReviewClick: onDeleteReviewClick\n    }, uuidv4(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Reviews, \"wdTL6ZLnXCeUK4pwvKD0ix+Tqy0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["C:/Users/KASIM/Documents/bookist-alpha/client/src/components/book/reviews/Reviews.jsx"],"names":["useEffect","useState","v4","uuidv4","useSelector","axios","classes","Review","ComposeReview","Reviews","book","updateBook","isLoggedIn","state","library","reviews","setReviews","targetReview","setTargetReview","onReviewContentChange","val","content","onSubmitReviewClick","review_id","length","post","review","then","response","data","onDeleteReviewClick","getReviews","get","book_id","map"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport classes from \"./Reviews.module.css\";\r\nimport Review from \"./Review\";\r\nimport ComposeReview from \"./ComposeReview\";\r\n\r\nexport default function Reviews({ book, updateBook }) {\r\n   const isLoggedIn = useSelector((state) => state.library.isLoggedIn);\r\n   const [reviews, setReviews] = useState(null);\r\n   const [targetReview, setTargetReview] = useState({});\r\n\r\n   const onReviewContentChange = (val) => {\r\n      if (!val) {\r\n         return setTargetReview({});\r\n      }\r\n      setTargetReview({ ...targetReview, content: val });\r\n   };\r\n\r\n   const onSubmitReviewClick = async () => {\r\n      if (\r\n         targetReview.review_id &&\r\n         targetReview.content &&\r\n         targetReview.content.length > 0\r\n      ) {\r\n         axios\r\n            .post(\"/api/library/review\", { book, review: targetReview })\r\n            .then((response) => setReviews(response.data));\r\n      } else {\r\n         if (targetReview.content.length > 0) {\r\n            axios\r\n               .post(\"/api/library/review\", {\r\n                  book,\r\n                  review: { content: targetReview.content },\r\n               })\r\n               .then((response) => {\r\n                  if (response.data.length === 2) {\r\n                     setReviews(response.data[0]);\r\n                     updateBook(response.data[1]);\r\n                  } else {\r\n                     setReviews(response.data);\r\n                  }\r\n               });\r\n         }\r\n      }\r\n      setTargetReview({});\r\n   };\r\n\r\n   const onDeleteReviewClick = (review) => {\r\n      axios\r\n         .post(\"/api/library/review/delete\", {\r\n            book,\r\n            review_id: review.review_id,\r\n         })\r\n         .then(() => setReviews(null));\r\n   };\r\n\r\n   useEffect(() => {\r\n      const getReviews = async () => {\r\n         const response = await axios.get(\r\n            `/api/library/get-reviews/${book.book_id}`\r\n         );\r\n         setReviews(response.data);\r\n      };\r\n      if (reviews === null && book.book_id) {\r\n         getReviews();\r\n      }\r\n   }, [book, reviews]);\r\n\r\n   return (\r\n      <div className={classes.reviews}>\r\n         {isLoggedIn && (\r\n            <ComposeReview\r\n               content={targetReview.content || \"\"}\r\n               onReviewContentChange={onReviewContentChange}\r\n               onSubmitReviewClick={onSubmitReviewClick}\r\n            />\r\n         )}\r\n\r\n         {reviews !== null &&\r\n            reviews.length > 0 &&\r\n            reviews.map((review) => (\r\n               <Review\r\n                  review={review}\r\n                  setTargetReview={setTargetReview}\r\n                  onDeleteReviewClick={onDeleteReviewClick}\r\n                  key={uuidv4()}\r\n               />\r\n            ))}\r\n      </div>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}