{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KASIM\\\\Documents\\\\bookist-alpha\\\\client\\\\src\\\\components\\\\book\\\\booklist\\\\AddToBooklist.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState, useMemo } from \"react\"; // import { useSelector } from \"react-redux\";\n\nimport axios from \"axios\";\nimport classes from \"./AddToBooklist.module.css\";\nimport CurrentBooklists from \"./CurrentBooklists\";\nimport AvailableBooklists from \"./AvailableBooklists\";\nimport CreateNewBooklist from \"./CreateNewBooklist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddToBooklist(_ref) {\n  _s();\n\n  let {\n    book,\n    setBook\n  } = _ref;\n  const [booklists, setBooklists] = useState(null);\n  const [displayAddToBooklist, setDisplayAddToBooklist] = useState(false);\n  const booklistsFromState = useMemo(() => book.booklists || [], [book.booklists]);\n  const availableBooklists = booklists !== null && booklists.filter(booklist => !booklistsFromState.includes(booklist.booklist_title));\n\n  const createNewBooklist = async newBooklistName => {\n    const response = await axios.post(\"/api/library/booklist-create\", {\n      newBooklistName,\n      book\n    });\n    const bookObj = response.data;\n    setDisplayAddToBooklist(false);\n    setBook(bookObj);\n  };\n\n  const addToBooklist = async idx => {\n    const response = await axios.put(\"/api/library/booklist-add\", {\n      book,\n      booklist_id: availableBooklists[idx].booklist_id\n    });\n    const bookObj = response.data;\n    setDisplayAddToBooklist(false);\n    setBook(bookObj);\n  };\n\n  useEffect(() => {\n    const getBooklistNames = async () => {\n      const response = await axios.get(\"/api/library/booklist-names\");\n      const booklistsTotal = response.data;\n      setBooklists(booklistsTotal);\n    };\n\n    if (booklists === null) {\n      getBooklistNames();\n    }\n  }, [booklistsFromState, booklists]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.addToBooklist,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.currentBooklistsWrapper,\n      children: [booklistsFromState && booklistsFromState.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Included In:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(CurrentBooklists, {\n        booklists: booklistsFromState || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDisplayAddToBooklist(!displayAddToBooklist),\n      className: classes.addToBooklistButton,\n      children: \"Add To Booklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this), displayAddToBooklist && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.availableBooklistsWrapper,\n        children: [availableBooklists && availableBooklists.length > 0 && /*#__PURE__*/_jsxDEV(AvailableBooklists, {\n          addToBooklist: addToBooklist,\n          availableBooklists: availableBooklists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 22\n        }, this), availableBooklists && availableBooklists.length === 0 && /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"There are no booklists available. Create a new booklist below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.createNewBooklistWrapper,\n        children: booklists && /*#__PURE__*/_jsxDEV(CreateNewBooklist, {\n          createNewBooklist: createNewBooklist,\n          booklists: booklists,\n          availableBooklists: availableBooklists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AddToBooklist, \"xBdDVOCw5mz3+GxTZ/nGq3A1Nmg=\");\n\n_c = AddToBooklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToBooklist\");","map":{"version":3,"sources":["C:/Users/KASIM/Documents/bookist-alpha/client/src/components/book/booklist/AddToBooklist.jsx"],"names":["useEffect","useState","useMemo","axios","classes","CurrentBooklists","AvailableBooklists","CreateNewBooklist","AddToBooklist","book","setBook","booklists","setBooklists","displayAddToBooklist","setDisplayAddToBooklist","booklistsFromState","availableBooklists","filter","booklist","includes","booklist_title","createNewBooklist","newBooklistName","response","post","bookObj","data","addToBooklist","idx","put","booklist_id","getBooklistNames","get","booklistsTotal","currentBooklistsWrapper","length","addToBooklistButton","availableBooklistsWrapper","createNewBooklistWrapper"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useState, useMemo } from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport classes from \"./AddToBooklist.module.css\";\r\nimport CurrentBooklists from \"./CurrentBooklists\";\r\nimport AvailableBooklists from \"./AvailableBooklists\";\r\nimport CreateNewBooklist from \"./CreateNewBooklist\";\r\n\r\nexport default function AddToBooklist({ book, setBook }) {\r\n   const [booklists, setBooklists] = useState(null);\r\n   const [displayAddToBooklist, setDisplayAddToBooklist] = useState(false);\r\n\r\n   const booklistsFromState = useMemo(\r\n      () => book.booklists || [],\r\n      [book.booklists]\r\n   );\r\n   const availableBooklists =\r\n      booklists !== null &&\r\n      booklists.filter(\r\n         (booklist) => !booklistsFromState.includes(booklist.booklist_title)\r\n      );\r\n\r\n   const createNewBooklist = async (newBooklistName) => {\r\n      const response = await axios.post(\"/api/library/booklist-create\", {\r\n         newBooklistName,\r\n         book,\r\n      });\r\n      const bookObj = response.data;\r\n      setDisplayAddToBooklist(false);\r\n      setBook(bookObj);\r\n   };\r\n\r\n   const addToBooklist = async (idx) => {\r\n      const response = await axios.put(\"/api/library/booklist-add\", {\r\n         book,\r\n         booklist_id: availableBooklists[idx].booklist_id,\r\n      });\r\n      const bookObj = response.data;\r\n      setDisplayAddToBooklist(false);\r\n      setBook(bookObj);\r\n   };\r\n\r\n   useEffect(() => {\r\n      const getBooklistNames = async () => {\r\n         const response = await axios.get(\"/api/library/booklist-names\");\r\n         const booklistsTotal = response.data;\r\n         setBooklists(booklistsTotal);\r\n      };\r\n      if (booklists === null) {\r\n         getBooklistNames();\r\n      }\r\n   }, [booklistsFromState, booklists]);\r\n\r\n   return (\r\n      <div className={classes.addToBooklist}>\r\n         <div className={classes.currentBooklistsWrapper}>\r\n            {booklistsFromState && booklistsFromState.length > 0 && (\r\n               <span>Included In:</span>\r\n            )}\r\n            <CurrentBooklists booklists={booklistsFromState || []} />\r\n         </div>\r\n         <button\r\n            onClick={() => setDisplayAddToBooklist(!displayAddToBooklist)}\r\n            className={classes.addToBooklistButton}\r\n         >\r\n            Add To Booklist\r\n         </button>\r\n         {displayAddToBooklist && (\r\n            <>\r\n               <div className={classes.availableBooklistsWrapper}>\r\n                  {availableBooklists && availableBooklists.length > 0 && (\r\n                     <AvailableBooklists\r\n                        addToBooklist={addToBooklist}\r\n                        availableBooklists={availableBooklists}\r\n                     />\r\n                  )}\r\n                  {availableBooklists && availableBooklists.length === 0 && (\r\n                     <strong>\r\n                        There are no booklists available. Create a new booklist\r\n                        below.\r\n                     </strong>\r\n                  )}\r\n               </div>\r\n               <div className={classes.createNewBooklistWrapper}>\r\n                  {booklists && (\r\n                     <CreateNewBooklist\r\n                        createNewBooklist={createNewBooklist}\r\n                        booklists={booklists}\r\n                        availableBooklists={availableBooklists}\r\n                     />\r\n                  )}\r\n               </div>\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}