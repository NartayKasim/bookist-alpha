{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KASIM\\\\Documents\\\\bookist-alpha\\\\client\\\\src\\\\pages\\\\booklist\\\\BooklistPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { withRouter } from \"../../app/hocs\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getUserBooks, updateBooklistName } from \"../../services/librarySlice\";\nimport axios from \"axios\";\nimport BooklistPageHeader from \"../../components/booklist/header/BooklistPageHeader\";\nimport classes from \"./BooklistPage.module.css\";\nimport BooklistItem from \"../../components/booklist/item/BooklistItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BooklistPage = _ref => {\n  _s();\n\n  let {\n    id,\n    title\n  } = _ref;\n  const [books, setBooks] = useState(null);\n  const [editTitle, setEditTitle] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userBooks = useSelector(state => state.library.userBooks);\n\n  const onBooklistRenameClick = async newBooklistTitle => {\n    if (newBooklistTitle !== title && newBooklistTitle.length > 0 && newBooklistTitle !== \"Read Books\") {\n      await axios.put(\"/api/library/booklist/rename\", {\n        booklist_id: id,\n        booklistTitle: newBooklistTitle\n      });\n      console.log(title, newBooklistTitle);\n      dispatch(updateBooklistName({\n        oldName: title,\n        newName: newBooklistTitle\n      }));\n    }\n\n    setEditTitle(false);\n    navigate(`/booklist/?id=${id}&title=${newBooklistTitle}`);\n  };\n\n  const onBooklistDeleteClick = async () => {\n    await axios.post(\"/api/library/booklist/delete\", {\n      booklistTitle: title\n    });\n    await dispatch(getUserBooks());\n    navigate(\"/library\");\n  };\n\n  const onRemoveBookClick = async book => {\n    await axios.post(\"/api/library/booklist/remove\", {\n      book,\n      booklistTitle: title\n    }).then(async () => {\n      await dispatch(getUserBooks());\n      setBooks(null);\n    });\n  };\n\n  useEffect(() => {\n    const updateBooks = async () => {\n      await dispatch(getUserBooks());\n    };\n\n    if (title) {\n      if (books === null) {\n        updateBooks();\n        setBooks(userBooks.filter(book => book.booklists && book.booklists.includes(title)));\n      }\n    } else {\n      navigate(\"/\");\n    }\n  }, [navigate, dispatch, title, userBooks, books]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: books !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.booklistPageWrapper,\n      children: [/*#__PURE__*/_jsxDEV(BooklistPageHeader, {\n        title: title,\n        editTitle: editTitle,\n        setEditTitle: setEditTitle,\n        onBooklistRenameClick: onBooklistRenameClick,\n        onBooklistDeleteClick: onBooklistDeleteClick,\n        books: books,\n        editBooks: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.booklistPageBody,\n        children: books && books !== null && books.map(book => /*#__PURE__*/_jsxDEV(BooklistItem, {\n          book: book,\n          editable: true,\n          onRemoveBookClick: onRemoveBookClick\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(BooklistPage, \"7Uhjt6LPPbHViJuXDZPUxfVPshE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = BooklistPage;\nexport default _c2 = withRouter(BooklistPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BooklistPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/KASIM/Documents/bookist-alpha/client/src/pages/booklist/BooklistPage.jsx"],"names":["useEffect","useState","useDispatch","useSelector","useNavigate","withRouter","v4","uuidv4","getUserBooks","updateBooklistName","axios","BooklistPageHeader","classes","BooklistItem","BooklistPage","id","title","books","setBooks","editTitle","setEditTitle","navigate","dispatch","userBooks","state","library","onBooklistRenameClick","newBooklistTitle","length","put","booklist_id","booklistTitle","console","log","oldName","newName","onBooklistDeleteClick","post","onRemoveBookClick","book","then","updateBooks","filter","booklists","includes","booklistPageWrapper","booklistPageBody","map"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { withRouter } from \"../../app/hocs\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getUserBooks, updateBooklistName } from \"../../services/librarySlice\";\r\nimport axios from \"axios\";\r\nimport BooklistPageHeader from \"../../components/booklist/header/BooklistPageHeader\";\r\nimport classes from \"./BooklistPage.module.css\";\r\nimport BooklistItem from \"../../components/booklist/item/BooklistItem\";\r\n\r\nconst BooklistPage = ({ id, title }) => {\r\n   const [books, setBooks] = useState(null);\r\n   const [editTitle, setEditTitle] = useState(false);\r\n\r\n   const navigate = useNavigate();\r\n   const dispatch = useDispatch();\r\n   const userBooks = useSelector((state) => state.library.userBooks);\r\n\r\n   const onBooklistRenameClick = async (newBooklistTitle) => {\r\n      if (\r\n         newBooklistTitle !== title &&\r\n         newBooklistTitle.length > 0 &&\r\n         newBooklistTitle !== \"Read Books\"\r\n      ) {\r\n         await axios.put(\"/api/library/booklist/rename\", {\r\n            booklist_id: id,\r\n            booklistTitle: newBooklistTitle,\r\n         });\r\n         console.log(title, newBooklistTitle);\r\n         dispatch(\r\n            updateBooklistName({\r\n               oldName: title,\r\n               newName: newBooklistTitle,\r\n            })\r\n         );\r\n      }\r\n      setEditTitle(false);\r\n      navigate(`/booklist/?id=${id}&title=${newBooklistTitle}`);\r\n   };\r\n\r\n   const onBooklistDeleteClick = async () => {\r\n      await axios.post(\"/api/library/booklist/delete\", {\r\n         booklistTitle: title,\r\n      });\r\n      await dispatch(getUserBooks());\r\n      navigate(\"/library\");\r\n   };\r\n\r\n   const onRemoveBookClick = async (book) => {\r\n      await axios\r\n         .post(\"/api/library/booklist/remove\", { book, booklistTitle: title })\r\n         .then(async () => {\r\n            await dispatch(getUserBooks());\r\n            setBooks(null);\r\n         });\r\n   };\r\n\r\n   useEffect(() => {\r\n      const updateBooks = async () => {\r\n         await dispatch(getUserBooks());\r\n      };\r\n      if (title) {\r\n         if (books === null) {\r\n            updateBooks();\r\n            setBooks(\r\n               userBooks.filter(\r\n                  (book) => book.booklists && book.booklists.includes(title)\r\n               )\r\n            );\r\n         }\r\n      } else {\r\n         navigate(\"/\");\r\n      }\r\n   }, [navigate, dispatch, title, userBooks, books]);\r\n\r\n   return (\r\n      <>\r\n         {books !== null && (\r\n            <div className={classes.booklistPageWrapper}>\r\n               <BooklistPageHeader\r\n                  title={title}\r\n                  editTitle={editTitle}\r\n                  setEditTitle={setEditTitle}\r\n                  onBooklistRenameClick={onBooklistRenameClick}\r\n                  onBooklistDeleteClick={onBooklistDeleteClick}\r\n                  books={books}\r\n                  editBooks={true}\r\n               />\r\n               <div className={classes.booklistPageBody}>\r\n                  {books &&\r\n                     books !== null &&\r\n                     books.map((book) => (\r\n                        <BooklistItem\r\n                           key={uuidv4()}\r\n                           book={book}\r\n                           editable={true}\r\n                           onRemoveBookClick={onRemoveBookClick}\r\n                        />\r\n                     ))}\r\n               </div>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default withRouter(BooklistPage);\r\n"]},"metadata":{},"sourceType":"module"}